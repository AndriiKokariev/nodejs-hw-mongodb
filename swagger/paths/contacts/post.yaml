tags:
  - Contacts
summary: Создать новый контакт
operationId: createContact
description: Создает новый контакт для текущего пользователя
security:
  - bearerAuth: []
requestBody:
  content:
    multipart/form-data:
      schema:
        type: object
        required:
          - name
          - phoneNumber
        properties:
          name:
            type: string
            description: Имя контакта
            example: John Doe
          phoneNumber:
            type: string
            description: Номер телефона
            example: +380501234567
          email:
            type: string
            description: Электронная почта
            example: john.doe@example.com
          isFavourite:
            type: string
            enum: [true, false]
            description: Является ли контакт избранным
            example: 'false'
          contactType:
            type: string
            enum: [work, home, personal]
            description: Тип контакта
            example: personal
          photo:
            type: string
            format: binary
            description: Фото контакта
responses:
  '201':
    description: Контакт успешно создан
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 201
            message:
              type: string
              example: 'Successfully created a contact!'
            data:
              type: object
              properties:
                _id:
                  type: string
                  example: '6534528f7b7ee4545698a0c7'
                name:
                  type: string
                  example: 'John Doe'
                phoneNumber:
                  type: string
                  example: '+380501234567'
                email:
                  type: string
                  example: 'john.doe@example.com'
                isFavourite:
                  type: boolean
                  example: false
                contactType:
                  type: string
                  enum: [work, home, personal]
                  example: 'personal'
                userId:
                  type: string
                  example: '6534528f7b7ee4545698a0c8'
                photo:
                  type: string
                  example: 'https://res.cloudinary.com/your-cloud-name/image/upload/v1234567890/contacts/photo.jpg'
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
  '400':
    description: Неверный запрос
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: '"name" is required'
  '401':
    description: Неавторизованный запрос
    content:
      application/json:
        schema:
          type: object
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: 'Not authorized'
